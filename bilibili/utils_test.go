package bilibili

import (
	"testing"
)

func TestByteArrToDecimal(t *testing.T) {
	data := []byte{0,1,127,230}
	sum := ByteArrToDecimal([]byte(data))
	if sum < 0 {
		t.Error("ByteArrToDecimal([]byte(data)) < 0 err")
	}
}

func TestZlibInflate(t *testing.T) {
	// 未压缩数据
	noDeflated := []byte{0,0,0,20,0,16,0,1,0,0,0,3,0,0,0,1,0,1,78,191}
	// 被压缩的数据
	deflated := []byte{120,218,108,144,63,11,211,80,20,197,227,224,238,103,56,243,21,238,107,222,203,75,222,230,159,226,98,237,80,196,33,134,18,154,68,131,73,42,164,113,41,65,221,20,236,162,56,41,237,32,14,22,5,193,37,69,63,78,82,233,228,87,144,87,132,46,222,11,231,194,189,63,46,135,227,56,87,224,92,115,108,93,181,178,198,162,76,96,112,251,198,189,201,253,249,100,118,7,132,188,202,150,48,97,200,36,104,164,72,120,90,235,145,80,36,148,175,164,23,4,44,92,246,233,186,10,164,148,90,107,159,152,160,71,156,8,153,6,32,182,29,17,142,31,95,15,31,182,195,167,239,125,247,243,248,246,91,223,109,126,239,62,159,94,190,235,15,175,254,252,218,129,66,201,90,42,201,174,34,12,155,247,199,237,126,120,115,56,125,249,218,119,47,250,110,63,28,126,252,123,69,130,153,173,21,32,162,48,162,208,238,2,223,243,3,197,132,135,13,179,155,42,139,216,51,112,198,44,82,53,69,65,107,172,106,152,139,113,194,98,5,3,55,16,62,107,125,19,237,5,61,11,71,173,227,56,207,255,151,208,131,241,221,91,211,201,24,132,36,94,197,48,107,52,121,2,35,88,248,174,102,143,208,84,113,153,194,96,250,168,41,242,217,227,166,178,81,214,243,56,41,243,10,38,139,139,58,37,212,207,242,167,48,76,56,79,65,40,151,139,39,243,52,203,82,107,140,219,246,111,0,0,0,255,255,231,50,124,58}
	n, err := ZlibInflate(noDeflated)
	if n != nil && err == nil {
		t.Error("ZlibInflate([]byte(noDeflated)) err")
	}

	b, err := ZlibInflate(deflated)
	if b == nil || err != nil {
		t.Error("ZlibInflate([]byte(deflated)) err")
	}
}
